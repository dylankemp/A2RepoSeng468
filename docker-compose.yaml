services:
  backend-1:
    build: ./src/backend
    secrets:
      - db-password
    depends_on:
      - db
    ports:
      - 5001:8089
  backend-2:
    build: ./src/backend
    secrets:
      - db-password
    depends_on:
      - db
    ports:
      - 5002:8089
  db:
    build: ./src/db
    restart: always
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=example
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 27017
    ports:
      - 27017:27017
  proxy:
    build: ./src/proxy
    ports:
      - 8080:80
    depends_on:
      - backend-1
      - backend-2
    expose:
      - 8080
  cluster:
    image: redis:7.0.5-alpine
    entrypoint:
      - /bin/sh
      - -c
      - |
        redis-server --port 7001 --save "" --appendonly no --cluster-enabled yes --cluster-config-file 7001.conf &
        redis-server --port 7002 --save "" --appendonly no --cluster-enabled yes --cluster-config-file 7002.conf &
        redis-server --port 7003 --save "" --appendonly no --cluster-enabled yes --cluster-config-file 7003.conf &
        while ! redis-cli --cluster create 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 --cluster-yes; do sleep 1; done
        wait
    ports:
      - "7001:7001"
      - "7002:7002"
      - "7003:7003"
volumes:
  db-data:
secrets:
  db-password:
    file: ./src/db/password.txt